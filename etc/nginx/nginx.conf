worker_processes auto;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  # Compute a value for a Connection header depending on if Upgrade is set.
  # This is for proxying WebSocket traffic gracefully.
  # See: http://nginx.org/en/docs/http/websocket.html
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
  	listen 80;
    server_name localhost;
  	rewrite ^ https://$host$request_uri? permanent;
  }

  server {
    listen 443 ssl;

    server_name localhost;
    ssl_certificate /certs/hub.crt;
    ssl_certificate_key /certs/hub.key;

    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /certs/dhparam.pem;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    location / {
      proxy_pass http://hub:8000;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket support
    location ~* /(user/[^/]*)/(api/kernels/[^/]+/channels|terminals/websocket)/? {
      proxy_pass http://hub:8000;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 86400;
    }
  }
}
